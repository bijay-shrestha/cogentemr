83e52a9cb00e788207750b23d13e0fef
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _require = require('jest-config'),
    defaults = _require.defaults;

module.exports = {
  verbose: true,
  cacheDirectory: '.jest-cache',
  coverageDirectory: '.jest-coverage',
  coveragePathIgnorePatterns: ['<rootDir>/packages/apps/(?:.+?)/build/'],
  transformIgnorePatterns: ['<rootDir>/node_modules/', '/scripts/', '<rootDir>/packages/apps/(?:.+?)/build/'],
  testMatch: ['src/.*\\.test\\.js$', 'src/.*\\/__tests__/**/*.js?(x)', '**/?(*.)+(spec|test).js?(x)'],
  coverageReporters: ['html', 'text'],
  coverageThreshold: {
    global: {
      branches: 100,
      functions: 100,
      lines: 100,
      statements: 100
    }
  },
  testPathIgnorePatterns: ['/node_modules/', '<rootDir>/packages/apps/(?:.+?)/build/', '\\\\\\\\node_modules\\\\\\\\'],
  moduleNameMapper: {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
    "\\.(scss|sass|css)$": "identity-obj-proxy"
  },
  moduleFileExtensions: [].concat((0, _toConsumableArray2["default"])(defaults.moduleFileExtensions), ['node']),
  setupFiles: ['./jest.setup.js']
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImplc3QuY29uZmlnLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZWZhdWx0cyIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2ZXJib3NlIiwiY2FjaGVEaXJlY3RvcnkiLCJjb3ZlcmFnZURpcmVjdG9yeSIsImNvdmVyYWdlUGF0aElnbm9yZVBhdHRlcm5zIiwidHJhbnNmb3JtSWdub3JlUGF0dGVybnMiLCJ0ZXN0TWF0Y2giLCJjb3ZlcmFnZVJlcG9ydGVycyIsImNvdmVyYWdlVGhyZXNob2xkIiwiZ2xvYmFsIiwiYnJhbmNoZXMiLCJmdW5jdGlvbnMiLCJsaW5lcyIsInN0YXRlbWVudHMiLCJ0ZXN0UGF0aElnbm9yZVBhdHRlcm5zIiwibW9kdWxlTmFtZU1hcHBlciIsIm1vZHVsZUZpbGVFeHRlbnNpb25zIiwic2V0dXBGaWxlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQW1CQSxPQUFPLENBQUMsYUFBRCxDO0lBQW5CQyxRLFlBQUFBLFE7O0FBRVBDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxPQUFPLEVBQUUsSUFESTtBQUViQyxFQUFBQSxjQUFjLEVBQUUsYUFGSDtBQUdiQyxFQUFBQSxpQkFBaUIsRUFBRSxnQkFITjtBQUliQyxFQUFBQSwwQkFBMEIsRUFBRSxDQUN4Qix3Q0FEd0IsQ0FKZjtBQVFiQyxFQUFBQSx1QkFBdUIsRUFBQyxDQUFDLHlCQUFELEVBQTRCLFdBQTVCLEVBQXdDLHdDQUF4QyxDQVJYO0FBU2JDLEVBQUFBLFNBQVMsRUFBRSxDQUFDLHFCQUFELEVBQXVCLGdDQUF2QixFQUF5RCw2QkFBekQsQ0FURTtBQVViQyxFQUFBQSxpQkFBaUIsRUFBRSxDQUFDLE1BQUQsRUFBUyxNQUFULENBVk47QUFXYkMsRUFBQUEsaUJBQWlCLEVBQUU7QUFDZkMsSUFBQUEsTUFBTSxFQUFFO0FBQ0pDLE1BQUFBLFFBQVEsRUFBRSxHQUROO0FBRUpDLE1BQUFBLFNBQVMsRUFBRSxHQUZQO0FBR0pDLE1BQUFBLEtBQUssRUFBRSxHQUhIO0FBSUpDLE1BQUFBLFVBQVUsRUFBRTtBQUpSO0FBRE8sR0FYTjtBQW1CYkMsRUFBQUEsc0JBQXNCLEVBQUUsQ0FBQyxnQkFBRCxFQUFrQix3Q0FBbEIsRUFBMkQsOEJBQTNELENBbkJYO0FBb0JiQyxFQUFBQSxnQkFBZ0IsRUFBRTtBQUNkLDJGQUF1RixpQ0FEekU7QUFFZCwyQkFBdUI7QUFGVCxHQXBCTDtBQXdCYkMsRUFBQUEsb0JBQW9CLGdEQUFLbEIsUUFBUSxDQUFDa0Isb0JBQWQsSUFBb0MsTUFBcEMsRUF4QlA7QUEwQmJDLEVBQUFBLFVBQVUsRUFBQyxDQUNQLGlCQURPO0FBMUJFLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2RlZmF1bHRzfSA9IHJlcXVpcmUoJ2plc3QtY29uZmlnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHZlcmJvc2U6IHRydWUsXG4gICAgY2FjaGVEaXJlY3Rvcnk6ICcuamVzdC1jYWNoZScsXG4gICAgY292ZXJhZ2VEaXJlY3Rvcnk6ICcuamVzdC1jb3ZlcmFnZScsXG4gICAgY292ZXJhZ2VQYXRoSWdub3JlUGF0dGVybnM6IFtcbiAgICAgICAgJzxyb290RGlyPi9wYWNrYWdlcy9hcHBzLyg/Oi4rPykvYnVpbGQvJ1xuXG4gICAgXSxcbiAgICB0cmFuc2Zvcm1JZ25vcmVQYXR0ZXJuczpbJzxyb290RGlyPi9ub2RlX21vZHVsZXMvJywgJy9zY3JpcHRzLycsJzxyb290RGlyPi9wYWNrYWdlcy9hcHBzLyg/Oi4rPykvYnVpbGQvJ10sXG4gICAgdGVzdE1hdGNoOiBbJ3NyYy8uKlxcXFwudGVzdFxcXFwuanMkJywnc3JjLy4qXFxcXC9fX3Rlc3RzX18vKiovKi5qcz8oeCknLCAnKiovPygqLikrKHNwZWN8dGVzdCkuanM/KHgpJ10sXG4gICAgY292ZXJhZ2VSZXBvcnRlcnM6IFsnaHRtbCcsICd0ZXh0J10sXG4gICAgY292ZXJhZ2VUaHJlc2hvbGQ6IHtcbiAgICAgICAgZ2xvYmFsOiB7XG4gICAgICAgICAgICBicmFuY2hlczogMTAwLFxuICAgICAgICAgICAgZnVuY3Rpb25zOiAxMDAsXG4gICAgICAgICAgICBsaW5lczogMTAwLFxuICAgICAgICAgICAgc3RhdGVtZW50czogMTAwXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHRlc3RQYXRoSWdub3JlUGF0dGVybnM6IFsnL25vZGVfbW9kdWxlcy8nLCc8cm9vdERpcj4vcGFja2FnZXMvYXBwcy8oPzouKz8pL2J1aWxkLycsJ1xcXFxcXFxcXFxcXFxcXFxub2RlX21vZHVsZXNcXFxcXFxcXFxcXFxcXFxcJ10sXG4gICAgbW9kdWxlTmFtZU1hcHBlcjoge1xuICAgICAgICBcIlxcXFwuKGpwZ3xqcGVnfHBuZ3xnaWZ8ZW90fG90Znx3ZWJwfHN2Z3x0dGZ8d29mZnx3b2ZmMnxtcDR8d2VibXx3YXZ8bXAzfG00YXxhYWN8b2dhKSRcIjogXCI8cm9vdERpcj4vX19tb2Nrc19fL2ZpbGVNb2NrLmpzXCIsXG4gICAgICAgIFwiXFxcXC4oc2Nzc3xzYXNzfGNzcykkXCI6IFwiaWRlbnRpdHktb2JqLXByb3h5XCJcbiAgICB9LFxuICAgIG1vZHVsZUZpbGVFeHRlbnNpb25zOlsuLi5kZWZhdWx0cy5tb2R1bGVGaWxlRXh0ZW5zaW9ucywgJ25vZGUnXG4gICAgXSxcbiAgICBzZXR1cEZpbGVzOltcbiAgICAgICAgJy4vamVzdC5zZXR1cC5qcydcbiAgICBdXG59OyJdfQ==