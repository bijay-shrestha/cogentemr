008a01145a7fcc6efd133b9c72e79a62
/* istanbul ignore next */
"use strict";

var cov_1ocotdg2wu = function () {
  var path = "/Users/bijayshrestha/Dropbox/Workspaces/cogentemr/jest.config.bak.js_bak";
  var hash = "ca48bcae0834ea7b3ef8dfca8e738e48412843aa";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/bijayshrestha/Dropbox/Workspaces/cogentemr/jest.config.bak.js_bak",
    statementMap: {
      "0": {
        start: {
          line: 1,
          column: 19
        },
        end: {
          line: 1,
          column: 41
        }
      },
      "1": {
        start: {
          line: 3,
          column: 0
        },
        end: {
          line: 31,
          column: 2
        }
      }
    },
    fnMap: {},
    branchMap: {},
    s: {
      "0": 0,
      "1": 0
    },
    f: {},
    b: {},
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "ca48bcae0834ea7b3ef8dfca8e738e48412843aa"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _ref = (cov_1ocotdg2wu.s[0]++, require('jest-config')),
    defaults = _ref.defaults;

/* istanbul ignore next */
cov_1ocotdg2wu.s[1]++;
module.exports = {
  verbose: true,
  cacheDirectory: '.jest-cache',
  coverageDirectory: '.jest-coverage',
  coveragePathIgnorePatterns: ['<rootDir>/packages/apps/(?:.+?)/build/'],
  transformIgnorePatterns: ['<rootDir>/node_modules/'],
  testMatch: ['**/__tests__/**/*.js?(x)', '**/?(*.)+(spec|test).js?(x)'],
  coverageReporters: ['html', 'text'],
  coverageThreshold: {
    global: {
      branches: 100,
      functions: 100,
      lines: 100,
      statements: 100
    }
  },
  testPathIgnorePatterns: ['/node_modules/', '<rootDir>/packages/apps/(?:.+?)/build/', '\\\\\\\\node_modules\\\\\\\\'],
  moduleNameMapper: {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
    "\\.(scss|sass|css)$": "identity-obj-proxy"
  },
  moduleFileExtensions:
  /* istanbul ignore next */
  [].concat((0, _toConsumableArray2["default"])(defaults.moduleFileExtensions), ['node']),
  setupFiles: ['./jest.setup.bak.js_bak']
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImplc3QuY29uZmlnLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZWZhdWx0cyIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2ZXJib3NlIiwiY2FjaGVEaXJlY3RvcnkiLCJjb3ZlcmFnZURpcmVjdG9yeSIsImNvdmVyYWdlUGF0aElnbm9yZVBhdHRlcm5zIiwidHJhbnNmb3JtSWdub3JlUGF0dGVybnMiLCJ0ZXN0TWF0Y2giLCJjb3ZlcmFnZVJlcG9ydGVycyIsImNvdmVyYWdlVGhyZXNob2xkIiwiZ2xvYmFsIiwiYnJhbmNoZXMiLCJmdW5jdGlvbnMiLCJsaW5lcyIsInN0YXRlbWVudHMiLCJ0ZXN0UGF0aElnbm9yZVBhdHRlcm5zIiwibW9kdWxlTmFtZU1hcHBlciIsIm1vZHVsZUZpbGVFeHRlbnNpb25zIiwic2V0dXBGaWxlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7bUNBQW1CQSxPQUFPLENBQUMsYUFBRCxDO0lBQW5CQyxRLFFBQUFBLFE7Ozs7QUFFUEMsTUFBTSxDQUFDQyxPQUFQLEdBQWlCO0FBQ2JDLEVBQUFBLE9BQU8sRUFBRSxJQURJO0FBRWJDLEVBQUFBLGNBQWMsRUFBRSxhQUZIO0FBR2JDLEVBQUFBLGlCQUFpQixFQUFFLGdCQUhOO0FBSWJDLEVBQUFBLDBCQUEwQixFQUFFLENBQ3hCLHdDQUR3QixDQUpmO0FBT2JDLEVBQUFBLHVCQUF1QixFQUFDLENBQUMseUJBQUQsQ0FQWDtBQVFiQyxFQUFBQSxTQUFTLEVBQUUsQ0FBQywwQkFBRCxFQUE2Qiw2QkFBN0IsQ0FSRTtBQVNiQyxFQUFBQSxpQkFBaUIsRUFBRSxDQUFDLE1BQUQsRUFBUyxNQUFULENBVE47QUFVYkMsRUFBQUEsaUJBQWlCLEVBQUU7QUFDZkMsSUFBQUEsTUFBTSxFQUFFO0FBQ0pDLE1BQUFBLFFBQVEsRUFBRSxHQUROO0FBRUpDLE1BQUFBLFNBQVMsRUFBRSxHQUZQO0FBR0pDLE1BQUFBLEtBQUssRUFBRSxHQUhIO0FBSUpDLE1BQUFBLFVBQVUsRUFBRTtBQUpSO0FBRE8sR0FWTjtBQWtCYkMsRUFBQUEsc0JBQXNCLEVBQUUsQ0FBQyxnQkFBRCxFQUFrQix3Q0FBbEIsRUFBMkQsOEJBQTNELENBbEJYO0FBbUJiQyxFQUFBQSxnQkFBZ0IsRUFBRTtBQUNkLDJGQUF1RixpQ0FEekU7QUFFZCwyQkFBdUI7QUFGVCxHQW5CTDtBQXVCYkMsRUFBQUEsb0JBQW9CO0FBQUE7QUFBQSxnREFBS2xCLFFBQVEsQ0FBQ2tCLG9CQUFkLElBQW9DLE1BQXBDLEVBdkJQO0FBeUJiQyxFQUFBQSxVQUFVLEVBQUMsQ0FDUCxpQkFETztBQXpCRSxDQUFqQiIsInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHtkZWZhdWx0c30gPSByZXF1aXJlKCdqZXN0LWNvbmZpZycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgICB2ZXJib3NlOiB0cnVlLFxuICAgIGNhY2hlRGlyZWN0b3J5OiAnLmplc3QtY2FjaGUnLFxuICAgIGNvdmVyYWdlRGlyZWN0b3J5OiAnLmplc3QtY292ZXJhZ2UnLFxuICAgIGNvdmVyYWdlUGF0aElnbm9yZVBhdHRlcm5zOiBbXG4gICAgICAgICc8cm9vdERpcj4vcGFja2FnZXMvYXBwcy8oPzouKz8pL2J1aWxkLydcbiAgICBdLFxuICAgIHRyYW5zZm9ybUlnbm9yZVBhdHRlcm5zOlsnPHJvb3REaXI+L25vZGVfbW9kdWxlcy8nXSxcbiAgICB0ZXN0TWF0Y2g6IFsnKiovX190ZXN0c19fLyoqLyouanM/KHgpJywgJyoqLz8oKi4pKyhzcGVjfHRlc3QpLmpzPyh4KSddLFxuICAgIGNvdmVyYWdlUmVwb3J0ZXJzOiBbJ2h0bWwnLCAndGV4dCddLFxuICAgIGNvdmVyYWdlVGhyZXNob2xkOiB7XG4gICAgICAgIGdsb2JhbDoge1xuICAgICAgICAgICAgYnJhbmNoZXM6IDEwMCxcbiAgICAgICAgICAgIGZ1bmN0aW9uczogMTAwLFxuICAgICAgICAgICAgbGluZXM6IDEwMCxcbiAgICAgICAgICAgIHN0YXRlbWVudHM6IDEwMFxuICAgICAgICB9XG4gICAgfSxcbiAgICB0ZXN0UGF0aElnbm9yZVBhdHRlcm5zOiBbJy9ub2RlX21vZHVsZXMvJywnPHJvb3REaXI+L3BhY2thZ2VzL2FwcHMvKD86Lis/KS9idWlsZC8nLCdcXFxcXFxcXFxcXFxcXFxcbm9kZV9tb2R1bGVzXFxcXFxcXFxcXFxcXFxcXCddLFxuICAgIG1vZHVsZU5hbWVNYXBwZXI6IHtcbiAgICAgICAgXCJcXFxcLihqcGd8anBlZ3xwbmd8Z2lmfGVvdHxvdGZ8d2VicHxzdmd8dHRmfHdvZmZ8d29mZjJ8bXA0fHdlYm18d2F2fG1wM3xtNGF8YWFjfG9nYSkkXCI6IFwiPHJvb3REaXI+L19fbW9ja3NfXy9maWxlTW9jay5qc1wiLFxuICAgICAgICBcIlxcXFwuKHNjc3N8c2Fzc3xjc3MpJFwiOiBcImlkZW50aXR5LW9iai1wcm94eVwiXG4gICAgfSxcbiAgICBtb2R1bGVGaWxlRXh0ZW5zaW9uczpbLi4uZGVmYXVsdHMubW9kdWxlRmlsZUV4dGVuc2lvbnMsICdub2RlJ1xuICAgIF0sXG4gICAgc2V0dXBGaWxlczpbXG4gICAgICAgICcuL2plc3Quc2V0dXAuanMnXG4gICAgXVxufTsiXX0=