{"version":3,"sources":["ButtonInput.test.js"],"names":["expect","addSnapshotSerializer","enzymeSerializer","describe","wrapper","onClickMock","beforeEach","jest","fn","mount","afterEach","unmount","it","toBeDefined","find","toHaveLength","text","toEqual","prop","propsToCheck","buttonInputPropsKeys","Object","keys","Button","props","map","reqProp","i","toContain","typeValue","clickCallback","spyOn","instance","forceUpdate","simulate","toHaveBeenCalled","toMatchSnapshot"],"mappings":"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","sourcesContent":["import React from 'react';\nimport CButton from '..';\n\nexpect.addSnapshotSerializer(enzymeSerializer);\ndescribe('Button Component', () => {\n    let wrapper,\n        onClickMock;\n    beforeEach( () => {\n        onClickMock = jest.fn();\n        wrapper = mount(<CButton type=\"submit\" buttonName=\"Submit\" onClickHandler={onClickMock}></CButton>)\n    });\n    afterEach(()=>{\n        wrapper.unmount()\n    });\n    \n    it( 'should be defined' , () => {\n       expect(wrapper).toBeDefined();\n    });\n    \n    it( 'should have only one button' , () => {\n        expect(wrapper.find('button')).toHaveLength(1)\n    });\n    \n    it('should show name of the button',()=>{\n        expect(wrapper.find('button').text()).toEqual(wrapper.prop('buttonName'));\n    });\n\n    it('should  have the exactly given props props',()=>{\n        const propsToCheck = \n        ['id',\n        'type',\n        'active',\n        'animated',\n        'as',\n        'attached',\n        'basic',\n        'children',\n        'circular',\n        'className', \n        'color',\n        'compact',\n        'content',\n        'disabled',\n        'floated',\n        'fluid',\n        'icon',\n        'inverted',\n        'label',\n        'labelPosition',\n        'loading',\n        'negative',\n        'onClick',\n        'positive',\n        'primary',\n        'role',\n        'secondary',\n        'size',\n        'tabIndex',\n        'toggle'];\n        let buttonInputPropsKeys=Object.keys(wrapper.find(Button).props());\n        propsToCheck.map((reqProp,i)=>{\n            expect(propsToCheck).toContain(buttonInputPropsKeys[i]);\n        })        \n    });\n    it('should only have type of submit or button', ()=>{\n     const typeValue =['submit','button'];\n     expect(typeValue).toContain(wrapper.find(Button).prop('type'))\n    });\n    describe('Button Input Simulation',()=>{\n        let clickCallback;\n        beforeEach(() => {\n            clickCallback = jest.spyOn(wrapper.instance(),'onClickHandler');\n            wrapper.instance().forceUpdate(); \n            wrapper.find(Button).simulate('click');\n              \n        });\n        it('should call the onClick fuction handler when it is clicked',() => {\n         expect(clickCallback).toHaveBeenCalled();\n        });\n        it('should call the props onClikHandler function after button is Clicked',() =>{\n          expect(onClickMock).toHaveBeenCalled();\n        })\n    });\n    describe('Snap Shot Testing',() => {\n        it('should create or match previous snapshot of the component',() => {\n            expect(wrapper).toMatchSnapshot(); \n        });\n    })\n});"]}