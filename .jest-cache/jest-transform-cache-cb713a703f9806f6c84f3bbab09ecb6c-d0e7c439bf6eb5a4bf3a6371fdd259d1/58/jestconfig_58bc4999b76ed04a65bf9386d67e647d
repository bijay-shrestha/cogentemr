d6094854f56f158a8beab848a258647f
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _require = require('jest-config'),
    defaults = _require.defaults;

module.exports = {
  verbose: true,
  cacheDirectory: '.jest-cache',
  coverageDirectory: '.jest-coverage',
  coveragePathIgnorePatterns: ['<rootDir>/packages/apps/(?:.+?)/build/'],
  transformIgnorePatterns: ['<rootDir>/node_modules/', '<rootDir>/packages/apps/(?:.+?)/build/'],
  testMatch: ['src/.*\\.test\\.js$', 'src/.*\\/__tests__/**/*.js?(x)', '**/?(*.)+(spec|test).js?(x)'],
  coverageReporters: ['html', 'text'],
  coverageThreshold: {
    global: {
      branches: 100,
      functions: 100,
      lines: 100,
      statements: 100
    }
  },
  testPathIgnorePatterns: ['/node_modules/', '<rootDir>/packages/apps/(?:.+?)/build/', '\\\\\\\\node_modules\\\\\\\\'],
  moduleNameMapper: {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
    "\\.(scss|sass|css)$": "identity-obj-proxy"
  },
  moduleFileExtensions: [].concat((0, _toConsumableArray2["default"])(defaults.moduleFileExtensions), ['node']),
  setupFiles: ['./jest.setup.js']
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImplc3QuY29uZmlnLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZWZhdWx0cyIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2ZXJib3NlIiwiY2FjaGVEaXJlY3RvcnkiLCJjb3ZlcmFnZURpcmVjdG9yeSIsImNvdmVyYWdlUGF0aElnbm9yZVBhdHRlcm5zIiwidHJhbnNmb3JtSWdub3JlUGF0dGVybnMiLCJ0ZXN0TWF0Y2giLCJjb3ZlcmFnZVJlcG9ydGVycyIsImNvdmVyYWdlVGhyZXNob2xkIiwiZ2xvYmFsIiwiYnJhbmNoZXMiLCJmdW5jdGlvbnMiLCJsaW5lcyIsInN0YXRlbWVudHMiLCJ0ZXN0UGF0aElnbm9yZVBhdHRlcm5zIiwibW9kdWxlTmFtZU1hcHBlciIsIm1vZHVsZUZpbGVFeHRlbnNpb25zIiwic2V0dXBGaWxlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQW1CQSxPQUFPLENBQUMsYUFBRCxDO0lBQW5CQyxRLFlBQUFBLFE7O0FBRVBDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxPQUFPLEVBQUUsSUFESTtBQUViQyxFQUFBQSxjQUFjLEVBQUUsYUFGSDtBQUdiQyxFQUFBQSxpQkFBaUIsRUFBRSxnQkFITjtBQUliQyxFQUFBQSwwQkFBMEIsRUFBRSxDQUN4Qix3Q0FEd0IsQ0FKZjtBQU9iQyxFQUFBQSx1QkFBdUIsRUFBQyxDQUNwQix5QkFEb0IsRUFFcEIsd0NBRm9CLENBUFg7QUFXYkMsRUFBQUEsU0FBUyxFQUFFLENBQUMscUJBQUQsRUFBdUIsZ0NBQXZCLEVBQXlELDZCQUF6RCxDQVhFO0FBWWJDLEVBQUFBLGlCQUFpQixFQUFFLENBQUMsTUFBRCxFQUFTLE1BQVQsQ0FaTjtBQWFiQyxFQUFBQSxpQkFBaUIsRUFBRTtBQUNmQyxJQUFBQSxNQUFNLEVBQUU7QUFDSkMsTUFBQUEsUUFBUSxFQUFFLEdBRE47QUFFSkMsTUFBQUEsU0FBUyxFQUFFLEdBRlA7QUFHSkMsTUFBQUEsS0FBSyxFQUFFLEdBSEg7QUFJSkMsTUFBQUEsVUFBVSxFQUFFO0FBSlI7QUFETyxHQWJOO0FBcUJiQyxFQUFBQSxzQkFBc0IsRUFBRSxDQUFDLGdCQUFELEVBQ3BCLHdDQURvQixFQUVwQiw4QkFGb0IsQ0FyQlg7QUF5QmJDLEVBQUFBLGdCQUFnQixFQUFFO0FBQ2QsMkZBQ0ksaUNBRlU7QUFHZCwyQkFBdUI7QUFIVCxHQXpCTDtBQThCYkMsRUFBQUEsb0JBQW9CLGdEQUFLbEIsUUFBUSxDQUFDa0Isb0JBQWQsSUFBb0MsTUFBcEMsRUE5QlA7QUFnQ2JDLEVBQUFBLFVBQVUsRUFBQyxDQUNQLGlCQURPO0FBaENFLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2RlZmF1bHRzfSA9IHJlcXVpcmUoJ2plc3QtY29uZmlnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHZlcmJvc2U6IHRydWUsXG4gICAgY2FjaGVEaXJlY3Rvcnk6ICcuamVzdC1jYWNoZScsXG4gICAgY292ZXJhZ2VEaXJlY3Rvcnk6ICcuamVzdC1jb3ZlcmFnZScsXG4gICAgY292ZXJhZ2VQYXRoSWdub3JlUGF0dGVybnM6IFtcbiAgICAgICAgJzxyb290RGlyPi9wYWNrYWdlcy9hcHBzLyg/Oi4rPykvYnVpbGQvJ1xuICAgIF0sXG4gICAgdHJhbnNmb3JtSWdub3JlUGF0dGVybnM6W1xuICAgICAgICAnPHJvb3REaXI+L25vZGVfbW9kdWxlcy8nLFxuICAgICAgICAnPHJvb3REaXI+L3BhY2thZ2VzL2FwcHMvKD86Lis/KS9idWlsZC8nXG4gICAgXSxcbiAgICB0ZXN0TWF0Y2g6IFsnc3JjLy4qXFxcXC50ZXN0XFxcXC5qcyQnLCdzcmMvLipcXFxcL19fdGVzdHNfXy8qKi8qLmpzPyh4KScsICcqKi8/KCouKSsoc3BlY3x0ZXN0KS5qcz8oeCknXSxcbiAgICBjb3ZlcmFnZVJlcG9ydGVyczogWydodG1sJywgJ3RleHQnXSxcbiAgICBjb3ZlcmFnZVRocmVzaG9sZDoge1xuICAgICAgICBnbG9iYWw6IHtcbiAgICAgICAgICAgIGJyYW5jaGVzOiAxMDAsXG4gICAgICAgICAgICBmdW5jdGlvbnM6IDEwMCxcbiAgICAgICAgICAgIGxpbmVzOiAxMDAsXG4gICAgICAgICAgICBzdGF0ZW1lbnRzOiAxMDBcbiAgICAgICAgfVxuICAgIH0sXG4gICAgdGVzdFBhdGhJZ25vcmVQYXR0ZXJuczogWycvbm9kZV9tb2R1bGVzLycsXG4gICAgICAgICc8cm9vdERpcj4vcGFja2FnZXMvYXBwcy8oPzouKz8pL2J1aWxkLycsXG4gICAgICAgICdcXFxcXFxcXFxcXFxcXFxcbm9kZV9tb2R1bGVzXFxcXFxcXFxcXFxcXFxcXCdcbiAgICBdLFxuICAgIG1vZHVsZU5hbWVNYXBwZXI6IHtcbiAgICAgICAgXCJcXFxcLihqcGd8anBlZ3xwbmd8Z2lmfGVvdHxvdGZ8d2VicHxzdmd8dHRmfHdvZmZ8d29mZjJ8bXA0fHdlYm18d2F2fG1wM3xtNGF8YWFjfG9nYSkkXCI6XG4gICAgICAgICAgICBcIjxyb290RGlyPi9fX21vY2tzX18vZmlsZU1vY2suanNcIixcbiAgICAgICAgXCJcXFxcLihzY3NzfHNhc3N8Y3NzKSRcIjogXCJpZGVudGl0eS1vYmotcHJveHlcIlxuICAgIH0sXG4gICAgbW9kdWxlRmlsZUV4dGVuc2lvbnM6Wy4uLmRlZmF1bHRzLm1vZHVsZUZpbGVFeHRlbnNpb25zLCAnbm9kZSdcbiAgICBdLFxuICAgIHNldHVwRmlsZXM6W1xuICAgICAgICAnLi9qZXN0LnNldHVwLmpzJ1xuICAgIF1cbn07Il19