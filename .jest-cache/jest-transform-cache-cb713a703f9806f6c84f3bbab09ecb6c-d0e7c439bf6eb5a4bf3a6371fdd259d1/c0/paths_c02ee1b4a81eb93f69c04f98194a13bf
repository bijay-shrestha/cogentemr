1f09e81309348c8422093441a30e8bef
'use strict';

/* istanbul ignore next */
var cov_21r6jvlhuz = function () {
  var path = "/Users/bijayshrestha/Dropbox/Workspaces/cogentemr/packages/apps/admin/config/paths.js";
  var hash = "53194f2c1363b8e973d65c82f4d04eeb5862077e";
  var global = new Function("return this")();
  var gcv = "__coverage__";
  var coverageData = {
    path: "/Users/bijayshrestha/Dropbox/Workspaces/cogentemr/packages/apps/admin/config/paths.js",
    statementMap: {
      "0": {
        start: {
          line: 3,
          column: 13
        },
        end: {
          line: 3,
          column: 28
        }
      },
      "1": {
        start: {
          line: 4,
          column: 11
        },
        end: {
          line: 4,
          column: 24
        }
      },
      "2": {
        start: {
          line: 5,
          column: 12
        },
        end: {
          line: 5,
          column: 26
        }
      },
      "3": {
        start: {
          line: 9,
          column: 21
        },
        end: {
          line: 9,
          column: 51
        }
      },
      "4": {
        start: {
          line: 10,
          column: 19
        },
        end: {
          line: 10,
          column: 75
        }
      },
      "5": {
        start: {
          line: 10,
          column: 35
        },
        end: {
          line: 10,
          column: 75
        }
      },
      "6": {
        start: {
          line: 12,
          column: 21
        },
        end: {
          line: 12,
          column: 43
        }
      },
      "7": {
        start: {
          line: 15,
          column: 19
        },
        end: {
          line: 15,
          column: 42
        }
      },
      "8": {
        start: {
          line: 16,
          column: 2
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "9": {
        start: {
          line: 17,
          column: 4
        },
        end: {
          line: 17,
          column: 53
        }
      },
      "10": {
        start: {
          line: 18,
          column: 9
        },
        end: {
          line: 22,
          column: 3
        }
      },
      "11": {
        start: {
          line: 19,
          column: 4
        },
        end: {
          line: 19,
          column: 27
        }
      },
      "12": {
        start: {
          line: 21,
          column: 4
        },
        end: {
          line: 21,
          column: 21
        }
      },
      "13": {
        start: {
          line: 25,
          column: 21
        },
        end: {
          line: 26,
          column: 50
        }
      },
      "14": {
        start: {
          line: 26,
          column: 2
        },
        end: {
          line: 26,
          column: 50
        }
      },
      "15": {
        start: {
          line: 35,
          column: 20
        },
        end: {
          line: 35,
          column: 48
        }
      },
      "16": {
        start: {
          line: 37,
          column: 4
        },
        end: {
          line: 37,
          column: 69
        }
      },
      "17": {
        start: {
          line: 38,
          column: 2
        },
        end: {
          line: 38,
          column: 38
        }
      },
      "18": {
        start: {
          line: 41,
          column: 29
        },
        end: {
          line: 53,
          column: 1
        }
      },
      "19": {
        start: {
          line: 56,
          column: 22
        },
        end: {
          line: 66,
          column: 1
        }
      },
      "20": {
        start: {
          line: 57,
          column: 20
        },
        end: {
          line: 59,
          column: 3
        }
      },
      "21": {
        start: {
          line: 58,
          column: 4
        },
        end: {
          line: 58,
          column: 56
        }
      },
      "22": {
        start: {
          line: 61,
          column: 2
        },
        end: {
          line: 63,
          column: 3
        }
      },
      "23": {
        start: {
          line: 62,
          column: 4
        },
        end: {
          line: 62,
          column: 49
        }
      },
      "24": {
        start: {
          line: 65,
          column: 2
        },
        end: {
          line: 65,
          column: 37
        }
      },
      "25": {
        start: {
          line: 69,
          column: 0
        },
        end: {
          line: 86,
          column: 2
        }
      },
      "26": {
        start: {
          line: 90,
          column: 0
        },
        end: {
          line: 90,
          column: 59
        }
      }
    },
    fnMap: {
      "0": {
        name: "(anonymous_0)",
        decl: {
          start: {
            line: 10,
            column: 19
          },
          end: {
            line: 10,
            column: 20
          }
        },
        loc: {
          start: {
            line: 10,
            column: 35
          },
          end: {
            line: 10,
            column: 75
          }
        },
        line: 10
      },
      "1": {
        name: "ensureSlash",
        decl: {
          start: {
            line: 14,
            column: 9
          },
          end: {
            line: 14,
            column: 20
          }
        },
        loc: {
          start: {
            line: 14,
            column: 44
          },
          end: {
            line: 23,
            column: 1
          }
        },
        line: 14
      },
      "2": {
        name: "(anonymous_2)",
        decl: {
          start: {
            line: 25,
            column: 21
          },
          end: {
            line: 25,
            column: 22
          }
        },
        loc: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 26,
            column: 50
          }
        },
        line: 26
      },
      "3": {
        name: "getServedPath",
        decl: {
          start: {
            line: 34,
            column: 9
          },
          end: {
            line: 34,
            column: 22
          }
        },
        loc: {
          start: {
            line: 34,
            column: 39
          },
          end: {
            line: 39,
            column: 1
          }
        },
        line: 34
      },
      "4": {
        name: "(anonymous_4)",
        decl: {
          start: {
            line: 56,
            column: 22
          },
          end: {
            line: 56,
            column: 23
          }
        },
        loc: {
          start: {
            line: 56,
            column: 47
          },
          end: {
            line: 66,
            column: 1
          }
        },
        line: 56
      },
      "5": {
        name: "(anonymous_5)",
        decl: {
          start: {
            line: 57,
            column: 46
          },
          end: {
            line: 57,
            column: 47
          }
        },
        loc: {
          start: {
            line: 58,
            column: 4
          },
          end: {
            line: 58,
            column: 56
          }
        },
        line: 58
      }
    },
    branchMap: {
      "0": {
        loc: {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        }, {
          start: {
            line: 16,
            column: 2
          },
          end: {
            line: 22,
            column: 3
          }
        }],
        line: 16
      },
      "1": {
        loc: {
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 16,
            column: 29
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 16,
            column: 6
          },
          end: {
            line: 16,
            column: 14
          }
        }, {
          start: {
            line: 16,
            column: 18
          },
          end: {
            line: 16,
            column: 29
          }
        }],
        line: 16
      },
      "2": {
        loc: {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 22,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 22,
            column: 3
          }
        }, {
          start: {
            line: 18,
            column: 9
          },
          end: {
            line: 22,
            column: 3
          }
        }],
        line: 18
      },
      "3": {
        loc: {
          start: {
            line: 18,
            column: 13
          },
          end: {
            line: 18,
            column: 36
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 18,
            column: 13
          },
          end: {
            line: 18,
            column: 22
          }
        }, {
          start: {
            line: 18,
            column: 26
          },
          end: {
            line: 18,
            column: 36
          }
        }],
        line: 18
      },
      "4": {
        loc: {
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 26,
            column: 50
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 26,
            column: 2
          },
          end: {
            line: 26,
            column: 14
          }
        }, {
          start: {
            line: 26,
            column: 18
          },
          end: {
            line: 26,
            column: 50
          }
        }],
        line: 26
      },
      "5": {
        loc: {
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 69
          }
        },
        type: "binary-expr",
        locations: [{
          start: {
            line: 37,
            column: 4
          },
          end: {
            line: 37,
            column: 16
          }
        }, {
          start: {
            line: 37,
            column: 21
          },
          end: {
            line: 37,
            column: 68
          }
        }],
        line: 37
      },
      "6": {
        loc: {
          start: {
            line: 37,
            column: 21
          },
          end: {
            line: 37,
            column: 68
          }
        },
        type: "cond-expr",
        locations: [{
          start: {
            line: 37,
            column: 33
          },
          end: {
            line: 37,
            column: 62
          }
        }, {
          start: {
            line: 37,
            column: 65
          },
          end: {
            line: 37,
            column: 68
          }
        }],
        line: 37
      },
      "7": {
        loc: {
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 63,
            column: 3
          }
        },
        type: "if",
        locations: [{
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 63,
            column: 3
          }
        }, {
          start: {
            line: 61,
            column: 2
          },
          end: {
            line: 63,
            column: 3
          }
        }],
        line: 61
      }
    },
    s: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0,
      "6": 0,
      "7": 0,
      "8": 0,
      "9": 0,
      "10": 0,
      "11": 0,
      "12": 0,
      "13": 0,
      "14": 0,
      "15": 0,
      "16": 0,
      "17": 0,
      "18": 0,
      "19": 0,
      "20": 0,
      "21": 0,
      "22": 0,
      "23": 0,
      "24": 0,
      "25": 0,
      "26": 0
    },
    f: {
      "0": 0,
      "1": 0,
      "2": 0,
      "3": 0,
      "4": 0,
      "5": 0
    },
    b: {
      "0": [0, 0],
      "1": [0, 0],
      "2": [0, 0],
      "3": [0, 0],
      "4": [0, 0],
      "5": [0, 0],
      "6": [0, 0],
      "7": [0, 0]
    },
    _coverageSchema: "43e27e138ebf9cfc5966b082cf9a028302ed4184",
    hash: "53194f2c1363b8e973d65c82f4d04eeb5862077e"
  };
  var coverage = global[gcv] || (global[gcv] = {});

  if (coverage[path] && coverage[path].hash === hash) {
    return coverage[path];
  }

  return coverage[path] = coverageData;
}();

var path =
/* istanbul ignore next */
(cov_21r6jvlhuz.s[0]++, require('path'));
var fs =
/* istanbul ignore next */
(cov_21r6jvlhuz.s[1]++, require('fs'));
var url =
/* istanbul ignore next */
(cov_21r6jvlhuz.s[2]++, require('url')); // Make sure any symlinks in the project folder are resolved:
// https://github.com/facebook/create-react-app/issues/637

var appDirectory =
/* istanbul ignore next */
(cov_21r6jvlhuz.s[3]++, fs.realpathSync(process.cwd()));

/* istanbul ignore next */
cov_21r6jvlhuz.s[4]++;

var resolveApp = function resolveApp(relativePath) {
  /* istanbul ignore next */
  cov_21r6jvlhuz.f[0]++;
  cov_21r6jvlhuz.s[5]++;
  return path.resolve(appDirectory, relativePath);
};

var envPublicUrl =
/* istanbul ignore next */
(cov_21r6jvlhuz.s[6]++, process.env.PUBLIC_URL);

function ensureSlash(inputPath, needsSlash) {
  /* istanbul ignore next */
  cov_21r6jvlhuz.f[1]++;
  var hasSlash =
  /* istanbul ignore next */
  (cov_21r6jvlhuz.s[7]++, inputPath.endsWith('/'));

  /* istanbul ignore next */
  cov_21r6jvlhuz.s[8]++;

  if (
  /* istanbul ignore next */
  (cov_21r6jvlhuz.b[1][0]++, hasSlash) &&
  /* istanbul ignore next */
  (cov_21r6jvlhuz.b[1][1]++, !needsSlash)) {
    /* istanbul ignore next */
    cov_21r6jvlhuz.b[0][0]++;
    cov_21r6jvlhuz.s[9]++;
    return inputPath.substr(0, inputPath.length - 1);
  } else {
    /* istanbul ignore next */
    cov_21r6jvlhuz.b[0][1]++;
    cov_21r6jvlhuz.s[10]++;

    if (
    /* istanbul ignore next */
    (cov_21r6jvlhuz.b[3][0]++, !hasSlash) &&
    /* istanbul ignore next */
    (cov_21r6jvlhuz.b[3][1]++, needsSlash)) {
      /* istanbul ignore next */
      cov_21r6jvlhuz.b[2][0]++;
      cov_21r6jvlhuz.s[11]++;
      return (
        /* istanbul ignore next */
        "".concat(inputPath, "/")
      );
    } else {
      /* istanbul ignore next */
      cov_21r6jvlhuz.b[2][1]++;
      cov_21r6jvlhuz.s[12]++;
      return inputPath;
    }
  }
}

/* istanbul ignore next */
cov_21r6jvlhuz.s[13]++;

var getPublicUrl = function getPublicUrl(appPackageJson) {
  /* istanbul ignore next */
  cov_21r6jvlhuz.f[2]++;
  cov_21r6jvlhuz.s[14]++;
  return (
    /* istanbul ignore next */
    (cov_21r6jvlhuz.b[4][0]++, envPublicUrl) ||
    /* istanbul ignore next */
    (cov_21r6jvlhuz.b[4][1]++, require(appPackageJson).homepage)
  );
}; // We use `PUBLIC_URL` environment variable or "homepage" field to infer
// "public path" at which the app is served.
// Webpack needs to know it to put the right <script> hrefs into HTML even in
// single-page apps that may serve index.html for nested URLs like /todos/42.
// We can't use a relative path in HTML because we don't want to load something
// like /todos/42/static/js/bundle.7289d.js. We have to know the root.


function getServedPath(appPackageJson) {
  /* istanbul ignore next */
  cov_21r6jvlhuz.f[3]++;
  var publicUrl =
  /* istanbul ignore next */
  (cov_21r6jvlhuz.s[15]++, getPublicUrl(appPackageJson));
  var servedUrl =
  /* istanbul ignore next */
  (cov_21r6jvlhuz.s[16]++,
  /* istanbul ignore next */
  (cov_21r6jvlhuz.b[5][0]++, envPublicUrl) ||
  /* istanbul ignore next */
  (cov_21r6jvlhuz.b[5][1]++, publicUrl ?
  /* istanbul ignore next */
  (cov_21r6jvlhuz.b[6][0]++, url.parse(publicUrl).pathname) :
  /* istanbul ignore next */
  (cov_21r6jvlhuz.b[6][1]++, '/')));

  /* istanbul ignore next */
  cov_21r6jvlhuz.s[17]++;
  return ensureSlash(servedUrl, true);
}

var moduleFileExtensions =
/* istanbul ignore next */
(cov_21r6jvlhuz.s[18]++, ['web.mjs', 'mjs', 'web.js', 'js', 'web.ts', 'ts', 'web.tsx', 'tsx', 'json', 'web.jsx', 'jsx']); // Resolve file paths in the same order as webpack

/* istanbul ignore next */
cov_21r6jvlhuz.s[19]++;

var resolveModule = function resolveModule(resolveFn, filePath) {
  /* istanbul ignore next */
  cov_21r6jvlhuz.f[4]++;
  var extension =
  /* istanbul ignore next */
  (cov_21r6jvlhuz.s[20]++, moduleFileExtensions.find(function (extension) {
    /* istanbul ignore next */
    cov_21r6jvlhuz.f[5]++;
    cov_21r6jvlhuz.s[21]++;
    return fs.existsSync(resolveFn(
    /* istanbul ignore next */
    "".concat(filePath, ".").concat(extension)));
  }));

  /* istanbul ignore next */
  cov_21r6jvlhuz.s[22]++;

  if (extension) {
    /* istanbul ignore next */
    cov_21r6jvlhuz.b[7][0]++;
    cov_21r6jvlhuz.s[23]++;
    return resolveFn(
    /* istanbul ignore next */
    "".concat(filePath, ".").concat(extension));
  } else
  /* istanbul ignore next */
  {
    cov_21r6jvlhuz.b[7][1]++;
  }

  cov_21r6jvlhuz.s[24]++;
  return resolveFn(
  /* istanbul ignore next */
  "".concat(filePath, ".js"));
}; // config after eject: we're in ./config/


/* istanbul ignore next */
cov_21r6jvlhuz.s[25]++;
module.exports = {
  dotenv: resolveApp('.env'),
  appPath: resolveApp('.'),
  appBuild: resolveApp('build'),
  appPublic: resolveApp('public'),
  appHtml: resolveApp('public/index.html'),
  appIndexJs: resolveModule(resolveApp, 'src/index'),
  appPackageJson: resolveApp('package.json'),
  appSrc: resolveApp('src'),
  appTsConfig: resolveApp('tsconfig.json'),
  appJsConfig: resolveApp('jsconfig.json'),
  yarnLockFile: resolveApp('yarn.lock'),
  testsSetup: resolveModule(resolveApp, 'src/setupTests'),
  proxySetup: resolveApp('src/setupProxy.js'),
  appNodeModules: resolveApp('node_modules'),
  publicUrl: getPublicUrl(resolveApp('package.json')),
  servedPath: getServedPath(resolveApp('package.json'))
};

/* istanbul ignore next */
cov_21r6jvlhuz.s[26]++;
module.exports.moduleFileExtensions = moduleFileExtensions;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,