eec804c037099d384359d76a4b6c52a2
"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");

var _toConsumableArray2 = _interopRequireDefault(require("@babel/runtime/helpers/toConsumableArray"));

var _require = require('jest-config'),
    defaults = _require.defaults;

module.exports = {
  verbose: true,
  cacheDirectory: '.jest-cache',
  coverageDirectory: '.jest-coverage',
  coveragePathIgnorePatterns: ['<rootDir>/packages/apps/(?:.+?)/build/'],
  transformIgnorePatterns: ['<rootDir>/node_modules/', '/scripts/', '<rootDir>/packages/apps/(?:.+?)/build/'],
  testMatch: ['src/.*\\.test\\.js$', 'src/.*\\/__tests__/**/*.js?(x)', '**/?(*.)+(spec|test).js?(x)'],
  coverageReporters: ['html', 'text'],
  coverageThreshold: {
    global: {
      branches: 100,
      functions: 100,
      lines: 100,
      statements: 100
    }
  },
  testPathIgnorePatterns: ['/node_modules/', '<rootDir>/packages/apps/(?:.+?)/build/', '\\\\\\\\node_modules\\\\\\\\', '/scripts/'],
  moduleNameMapper: {
    "\\.(jpg|jpeg|png|gif|eot|otf|webp|svg|ttf|woff|woff2|mp4|webm|wav|mp3|m4a|aac|oga)$": "<rootDir>/__mocks__/fileMock.js",
    "\\.(scss|sass|css)$": "identity-obj-proxy"
  },
  moduleFileExtensions: [].concat((0, _toConsumableArray2["default"])(defaults.moduleFileExtensions), ['node']),
  setupFiles: ['./jest.setup.js']
};
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImplc3QuY29uZmlnLmpzIl0sIm5hbWVzIjpbInJlcXVpcmUiLCJkZWZhdWx0cyIsIm1vZHVsZSIsImV4cG9ydHMiLCJ2ZXJib3NlIiwiY2FjaGVEaXJlY3RvcnkiLCJjb3ZlcmFnZURpcmVjdG9yeSIsImNvdmVyYWdlUGF0aElnbm9yZVBhdHRlcm5zIiwidHJhbnNmb3JtSWdub3JlUGF0dGVybnMiLCJ0ZXN0TWF0Y2giLCJjb3ZlcmFnZVJlcG9ydGVycyIsImNvdmVyYWdlVGhyZXNob2xkIiwiZ2xvYmFsIiwiYnJhbmNoZXMiLCJmdW5jdGlvbnMiLCJsaW5lcyIsInN0YXRlbWVudHMiLCJ0ZXN0UGF0aElnbm9yZVBhdHRlcm5zIiwibW9kdWxlTmFtZU1hcHBlciIsIm1vZHVsZUZpbGVFeHRlbnNpb25zIiwic2V0dXBGaWxlcyJdLCJtYXBwaW5ncyI6Ijs7Ozs7O2VBQW1CQSxPQUFPLENBQUMsYUFBRCxDO0lBQW5CQyxRLFlBQUFBLFE7O0FBRVBDLE1BQU0sQ0FBQ0MsT0FBUCxHQUFpQjtBQUNiQyxFQUFBQSxPQUFPLEVBQUUsSUFESTtBQUViQyxFQUFBQSxjQUFjLEVBQUUsYUFGSDtBQUdiQyxFQUFBQSxpQkFBaUIsRUFBRSxnQkFITjtBQUliQyxFQUFBQSwwQkFBMEIsRUFBRSxDQUN4Qix3Q0FEd0IsQ0FKZjtBQU9iQyxFQUFBQSx1QkFBdUIsRUFBQyxDQUNwQix5QkFEb0IsRUFFcEIsV0FGb0IsRUFHcEIsd0NBSG9CLENBUFg7QUFZYkMsRUFBQUEsU0FBUyxFQUFFLENBQUMscUJBQUQsRUFBdUIsZ0NBQXZCLEVBQXlELDZCQUF6RCxDQVpFO0FBYWJDLEVBQUFBLGlCQUFpQixFQUFFLENBQUMsTUFBRCxFQUFTLE1BQVQsQ0FiTjtBQWNiQyxFQUFBQSxpQkFBaUIsRUFBRTtBQUNmQyxJQUFBQSxNQUFNLEVBQUU7QUFDSkMsTUFBQUEsUUFBUSxFQUFFLEdBRE47QUFFSkMsTUFBQUEsU0FBUyxFQUFFLEdBRlA7QUFHSkMsTUFBQUEsS0FBSyxFQUFFLEdBSEg7QUFJSkMsTUFBQUEsVUFBVSxFQUFFO0FBSlI7QUFETyxHQWROO0FBc0JiQyxFQUFBQSxzQkFBc0IsRUFBRSxDQUFDLGdCQUFELEVBQ3BCLHdDQURvQixFQUVwQiw4QkFGb0IsRUFHcEIsV0FIb0IsQ0F0Qlg7QUEwQmJDLEVBQUFBLGdCQUFnQixFQUFFO0FBQ2QsMkZBQ0ksaUNBRlU7QUFHZCwyQkFBdUI7QUFIVCxHQTFCTDtBQStCYkMsRUFBQUEsb0JBQW9CLGdEQUFLbEIsUUFBUSxDQUFDa0Isb0JBQWQsSUFBb0MsTUFBcEMsRUEvQlA7QUFpQ2JDLEVBQUFBLFVBQVUsRUFBQyxDQUNQLGlCQURPO0FBakNFLENBQWpCIiwic291cmNlc0NvbnRlbnQiOlsiY29uc3Qge2RlZmF1bHRzfSA9IHJlcXVpcmUoJ2plc3QtY29uZmlnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICAgIHZlcmJvc2U6IHRydWUsXG4gICAgY2FjaGVEaXJlY3Rvcnk6ICcuamVzdC1jYWNoZScsXG4gICAgY292ZXJhZ2VEaXJlY3Rvcnk6ICcuamVzdC1jb3ZlcmFnZScsXG4gICAgY292ZXJhZ2VQYXRoSWdub3JlUGF0dGVybnM6IFtcbiAgICAgICAgJzxyb290RGlyPi9wYWNrYWdlcy9hcHBzLyg/Oi4rPykvYnVpbGQvJ1xuICAgIF0sXG4gICAgdHJhbnNmb3JtSWdub3JlUGF0dGVybnM6W1xuICAgICAgICAnPHJvb3REaXI+L25vZGVfbW9kdWxlcy8nLFxuICAgICAgICAnL3NjcmlwdHMvJyxcbiAgICAgICAgJzxyb290RGlyPi9wYWNrYWdlcy9hcHBzLyg/Oi4rPykvYnVpbGQvJ1xuICAgIF0sXG4gICAgdGVzdE1hdGNoOiBbJ3NyYy8uKlxcXFwudGVzdFxcXFwuanMkJywnc3JjLy4qXFxcXC9fX3Rlc3RzX18vKiovKi5qcz8oeCknLCAnKiovPygqLikrKHNwZWN8dGVzdCkuanM/KHgpJ10sXG4gICAgY292ZXJhZ2VSZXBvcnRlcnM6IFsnaHRtbCcsICd0ZXh0J10sXG4gICAgY292ZXJhZ2VUaHJlc2hvbGQ6IHtcbiAgICAgICAgZ2xvYmFsOiB7XG4gICAgICAgICAgICBicmFuY2hlczogMTAwLFxuICAgICAgICAgICAgZnVuY3Rpb25zOiAxMDAsXG4gICAgICAgICAgICBsaW5lczogMTAwLFxuICAgICAgICAgICAgc3RhdGVtZW50czogMTAwXG4gICAgICAgIH1cbiAgICB9LFxuICAgIHRlc3RQYXRoSWdub3JlUGF0dGVybnM6IFsnL25vZGVfbW9kdWxlcy8nLFxuICAgICAgICAnPHJvb3REaXI+L3BhY2thZ2VzL2FwcHMvKD86Lis/KS9idWlsZC8nLFxuICAgICAgICAnXFxcXFxcXFxcXFxcXFxcXG5vZGVfbW9kdWxlc1xcXFxcXFxcXFxcXFxcXFwnLFxuICAgICAgICAnL3NjcmlwdHMvJ10sXG4gICAgbW9kdWxlTmFtZU1hcHBlcjoge1xuICAgICAgICBcIlxcXFwuKGpwZ3xqcGVnfHBuZ3xnaWZ8ZW90fG90Znx3ZWJwfHN2Z3x0dGZ8d29mZnx3b2ZmMnxtcDR8d2VibXx3YXZ8bXAzfG00YXxhYWN8b2dhKSRcIjpcbiAgICAgICAgICAgIFwiPHJvb3REaXI+L19fbW9ja3NfXy9maWxlTW9jay5qc1wiLFxuICAgICAgICBcIlxcXFwuKHNjc3N8c2Fzc3xjc3MpJFwiOiBcImlkZW50aXR5LW9iai1wcm94eVwiXG4gICAgfSxcbiAgICBtb2R1bGVGaWxlRXh0ZW5zaW9uczpbLi4uZGVmYXVsdHMubW9kdWxlRmlsZUV4dGVuc2lvbnMsICdub2RlJ1xuICAgIF0sXG4gICAgc2V0dXBGaWxlczpbXG4gICAgICAgICcuL2plc3Quc2V0dXAuanMnXG4gICAgXVxufTsiXX0=